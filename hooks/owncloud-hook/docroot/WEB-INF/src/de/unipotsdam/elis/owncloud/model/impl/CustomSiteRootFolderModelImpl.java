/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package de.unipotsdam.elis.owncloud.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.util.PortalUtil;

import de.unipotsdam.elis.owncloud.model.CustomSiteRootFolder;
import de.unipotsdam.elis.owncloud.model.CustomSiteRootFolderModel;
import de.unipotsdam.elis.owncloud.service.persistence.CustomSiteRootFolderPK;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the CustomSiteRootFolder service. Represents a row in the &quot;Owncloud_CustomSiteRootFolder&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link de.unipotsdam.elis.owncloud.model.CustomSiteRootFolderModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CustomSiteRootFolderImpl}.
 * </p>
 *
 * @author Matthias
 * @see CustomSiteRootFolderImpl
 * @see de.unipotsdam.elis.owncloud.model.CustomSiteRootFolder
 * @see de.unipotsdam.elis.owncloud.model.CustomSiteRootFolderModel
 * @generated
 */
public class CustomSiteRootFolderModelImpl extends BaseModelImpl<CustomSiteRootFolder>
	implements CustomSiteRootFolderModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a custom site root folder model instance should use the {@link de.unipotsdam.elis.owncloud.model.CustomSiteRootFolder} interface instead.
	 */
	public static final String TABLE_NAME = "Owncloud_CustomSiteRootFolder";
	public static final Object[][] TABLE_COLUMNS = {
			{ "userId", Types.BIGINT },
			{ "originalPath", Types.VARCHAR },
			{ "customPath", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table Owncloud_CustomSiteRootFolder (userId LONG not null,originalPath VARCHAR(75) not null,customPath VARCHAR(75) null,primary key (userId, originalPath))";
	public static final String TABLE_SQL_DROP = "drop table Owncloud_CustomSiteRootFolder";
	public static final String ORDER_BY_JPQL = " ORDER BY customSiteRootFolder.id.userId ASC, customSiteRootFolder.id.originalPath ASC";
	public static final String ORDER_BY_SQL = " ORDER BY Owncloud_CustomSiteRootFolder.userId ASC, Owncloud_CustomSiteRootFolder.originalPath ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.de.unipotsdam.elis.owncloud.model.CustomSiteRootFolder"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.de.unipotsdam.elis.owncloud.model.CustomSiteRootFolder"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.de.unipotsdam.elis.owncloud.model.CustomSiteRootFolder"));

	public CustomSiteRootFolderModelImpl() {
	}

	@Override
	public CustomSiteRootFolderPK getPrimaryKey() {
		return new CustomSiteRootFolderPK(_userId, _originalPath);
	}

	@Override
	public void setPrimaryKey(CustomSiteRootFolderPK primaryKey) {
		setUserId(primaryKey.userId);
		setOriginalPath(primaryKey.originalPath);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new CustomSiteRootFolderPK(_userId, _originalPath);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((CustomSiteRootFolderPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return CustomSiteRootFolder.class;
	}

	@Override
	public String getModelClassName() {
		return CustomSiteRootFolder.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("userId", getUserId());
		attributes.put("originalPath", getOriginalPath());
		attributes.put("customPath", getCustomPath());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String originalPath = (String)attributes.get("originalPath");

		if (originalPath != null) {
			setOriginalPath(originalPath);
		}

		String customPath = (String)attributes.get("customPath");

		if (customPath != null) {
			setCustomPath(customPath);
		}
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getOriginalPath() {
		if (_originalPath == null) {
			return StringPool.BLANK;
		}
		else {
			return _originalPath;
		}
	}

	@Override
	public void setOriginalPath(String originalPath) {
		_originalPath = originalPath;
	}

	@Override
	public String getCustomPath() {
		if (_customPath == null) {
			return StringPool.BLANK;
		}
		else {
			return _customPath;
		}
	}

	@Override
	public void setCustomPath(String customPath) {
		_customPath = customPath;
	}

	@Override
	public CustomSiteRootFolder toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (CustomSiteRootFolder)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CustomSiteRootFolderImpl customSiteRootFolderImpl = new CustomSiteRootFolderImpl();

		customSiteRootFolderImpl.setUserId(getUserId());
		customSiteRootFolderImpl.setOriginalPath(getOriginalPath());
		customSiteRootFolderImpl.setCustomPath(getCustomPath());

		customSiteRootFolderImpl.resetOriginalValues();

		return customSiteRootFolderImpl;
	}

	@Override
	public int compareTo(CustomSiteRootFolder customSiteRootFolder) {
		CustomSiteRootFolderPK primaryKey = customSiteRootFolder.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof CustomSiteRootFolder)) {
			return false;
		}

		CustomSiteRootFolder customSiteRootFolder = (CustomSiteRootFolder)obj;

		CustomSiteRootFolderPK primaryKey = customSiteRootFolder.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<CustomSiteRootFolder> toCacheModel() {
		CustomSiteRootFolderCacheModel customSiteRootFolderCacheModel = new CustomSiteRootFolderCacheModel();

		customSiteRootFolderCacheModel.userId = getUserId();

		customSiteRootFolderCacheModel.originalPath = getOriginalPath();

		String originalPath = customSiteRootFolderCacheModel.originalPath;

		if ((originalPath != null) && (originalPath.length() == 0)) {
			customSiteRootFolderCacheModel.originalPath = null;
		}

		customSiteRootFolderCacheModel.customPath = getCustomPath();

		String customPath = customSiteRootFolderCacheModel.customPath;

		if ((customPath != null) && (customPath.length() == 0)) {
			customSiteRootFolderCacheModel.customPath = null;
		}

		return customSiteRootFolderCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(7);

		sb.append("{userId=");
		sb.append(getUserId());
		sb.append(", originalPath=");
		sb.append(getOriginalPath());
		sb.append(", customPath=");
		sb.append(getCustomPath());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(13);

		sb.append("<model><model-name>");
		sb.append("de.unipotsdam.elis.owncloud.model.CustomSiteRootFolder");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>originalPath</column-name><column-value><![CDATA[");
		sb.append(getOriginalPath());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>customPath</column-name><column-value><![CDATA[");
		sb.append(getCustomPath());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = CustomSiteRootFolder.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			CustomSiteRootFolder.class
		};
	private long _userId;
	private String _userUuid;
	private String _originalPath;
	private String _customPath;
	private CustomSiteRootFolder _escapedModel;
}