<%--
/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This file is part of Liferay Social Office. Liferay Social Office is free
 * software: you can redistribute it and/or modify it under the terms of the GNU
 * Affero General Public License as published by the Free Software Foundation,
 * either version 3 of the License, or (at your option) any later version.
 *
 * Liferay Social Office is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * Liferay Social Office. If not, see http://www.gnu.org/licenses/agpl-3.0.html.
 */
--%>

<%@page import="javax.xml.datatype.DatatypeFactory"%>
<%@page import="java.util.Date"%>
<%@page import="java.text.Format"%>
<%@page import="com.liferay.portal.kernel.util.FastDateFormatFactoryUtil"%>
<%@page import="java.text.DateFormat"%>
<%@page import="de.unipotsdam.elis.activities.util.ActivitiesUtil"%>
<%

String oldDate = StringPool.BLANK;

for (SocialActivitySet activitySet : results) {
	SocialActivityFeedEntry activityFeedEntry = SocialActivityInterpreterLocalServiceUtil.interpret("SO", activitySet, ServiceContextFactory.getInstance(request));
	
	start++;

	if (activityFeedEntry == null) {
		continue;
	}

	if (count >= _DELTA) {
		break;
	}

	String userPortraitURL = StringPool.BLANK;
	
	Portlet portlet = PortletLocalServiceUtil.getPortletById(activityFeedEntry.getPortletId());
	
	String socialActivityCssClass = portlet.getCssClassWrapper(); // style class for activity
	String originCssClass = "cu";	// activity origin, default is campus.up
	
	// if activity is MoodleSocialActivity set socialActivityCssClass to moodlesocialactivity type
	if (PortalUtil.getClassName(activitySet.getClassNameId()).equals(MoodleSocialActivity.class.getName())) {
		MoodleSocialActivity moodleSocialActivity = MoodleSocialActivityLocalServiceUtil.getMoodleSocialActivity(activitySet.getClassPK());
		JSONObject data = JSONFactoryUtil.createJSONObject(moodleSocialActivity.getData());
		String moodleSocialActivityType = data.getJSONObject("object").getJSONArray("type").getString(0);
		
		originCssClass = "moodle";

		socialActivityCssClass = ActivitiesUtil.getMoodleSocialActivityCssClass(moodleSocialActivityType);
		
		/* creator of moodle activity can differ form current user */
		userPortraitURL = ActivitiesUtil.getMoodleUserPortraitURL(data, themeDisplay);
		
	} else if (PortalUtil.getClassName(activitySet.getClassNameId()).equals(Layout.class.getName())){	
		// Layoutclass found so activity belongs to custompage
		// check type of custompage to set cssClass
		switch (activitySet.getType()) {
		case ExtendedSocialActivityKeyConstants.CUSTOM_PAGE_PUBLISHED:
			socialActivityCssClass = "sharedpage";
			break;

		case ExtendedSocialActivityKeyConstants.CUSTOM_PAGE_FEEDBACK_REQUESTED:
			socialActivityCssClass = "submission";
			break;
			
		case ExtendedSocialActivityKeyConstants.CUSTOM_PAGE_FEEDBACK_DELIVERED:
			socialActivityCssClass = "feedback";
			break;
			
		case ExtendedSocialActivityKeyConstants.CUSTOM_PAGE_DELETED:
			socialActivityCssClass = "delete";
			break;
		}
	
	} else {
		
		// check classNameIds to set desired css class
		socialActivityCssClass = ActivitiesUtil.getActivityCssClass(activitySet.getClassNameId());
	}
	
%>

	<!-- BEGIN #767 CHANGE -->	
	<%
		// format date in day, dd.month.yyy
		Format dateFormat = FastDateFormatFactoryUtil.getDate(
			DateFormat.FULL, themeDisplay.getLocale(),
			themeDisplay.getTimeZone());
		
		// create Date out of Unix Timestamp
		Date activityDate = new Date(activitySet.getCreateDate());

		// format date
		String currentDate = dateFormat.format(activityDate);
		oldDate = dateFormat.format(oldDateLong);
		
		// show date only if it differs from previous date
		if (!oldDate.equals(currentDate)) {
			oldDate = currentDate; // save date, only changes shall be displayed
			oldDateLong = activitySet.getCreateDate();
	%>
			<div class="activity-item clearfix activity-date" align="center">
				<%=currentDate%>
			</div>
	<%
		} 
	%>
	
	<aui:script>
		<portlet:namespace />oldDateLong = <%= oldDateLong %>;
	</aui:script>
	
	<!-- CHANGE #767 END -->
	
	<div class="activity-item clearfix <%= portlet.getCssClassWrapper() %>-activity <%= originCssClass %> <%= socialActivityCssClass %>" id="<portlet:namespace /><%= activitySet.getActivitySetId() %>">
		<div class="inner-wrapper">
			<%
			User activitySetUser = UserLocalServiceUtil.fetchUser(activitySet.getUserId());
	
			String userDisplayURL = StringPool.BLANK;
			String userFullName = StringPool.BLANK;
	
			if (activitySetUser != null) {
				userDisplayURL = activitySetUser.getDisplayURL(themeDisplay);
				userFullName = activitySetUser.getFullName();
				/* check if userPortraitURL is already set */
				userPortraitURL = userPortraitURL.equals(StringPool.BLANK) ? activitySetUser.getPortraitURL(themeDisplay) : userPortraitURL;
			 }
			%>
	
			<div class="user-portrait">
				<span class="avatar">
					<a href="<%= userDisplayURL %>">
						<img alt="<%= HtmlUtil.escape(userFullName) %>" src="<%= userPortraitURL %>" />
					</a>
				</span>
			</div>
	
			<%= activityFeedEntry.getTitle()  %>
			
	
		</div>
	</div>

	<aui:script use="aui-base">
		var entry = A.one('#<portlet:namespace /><%= activitySet.getActivitySetId() %>');

		var subentry = entry.one('.activity-subentry');

		if (subentry != null) {
			var body = entry.one('.grouped-activity-body');

			if (body.outerHeight() > (subentry.outerHeight() * 3)) {
				var toggle = entry.one('.toggle');

				toggle.removeClass('hide');

				entry.addClass('toggler-content-collapsed')
			}
			else {
				var bodyContainer = entry.one('.grouped-activity-body-container');

				bodyContainer.setStyle('height', 'auto');
			}
		}
	</aui:script>

<%
	count++;
}
%>