/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package de.unipotsdam.elis.language.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import de.unipotsdam.elis.language.model.LanguageKeyJournalArticle;
import de.unipotsdam.elis.language.model.LanguageKeyJournalArticleModel;
import de.unipotsdam.elis.language.service.persistence.LanguageKeyJournalArticlePK;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the LanguageKeyJournalArticle service. Represents a row in the &quot;Language_LanguageKeyJournalArticle&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link de.unipotsdam.elis.language.model.LanguageKeyJournalArticleModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link LanguageKeyJournalArticleImpl}.
 * </p>
 *
 * @author Matthias
 * @see LanguageKeyJournalArticleImpl
 * @see de.unipotsdam.elis.language.model.LanguageKeyJournalArticle
 * @see de.unipotsdam.elis.language.model.LanguageKeyJournalArticleModel
 * @generated
 */
public class LanguageKeyJournalArticleModelImpl extends BaseModelImpl<LanguageKeyJournalArticle>
	implements LanguageKeyJournalArticleModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a language key journal article model instance should use the {@link de.unipotsdam.elis.language.model.LanguageKeyJournalArticle} interface instead.
	 */
	public static final String TABLE_NAME = "Language_LanguageKeyJournalArticle";
	public static final Object[][] TABLE_COLUMNS = {
			{ "key_", Types.VARCHAR },
			{ "articleId", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table Language_LanguageKeyJournalArticle (key_ VARCHAR(75) not null,articleId VARCHAR(75) not null,primary key (key_, articleId))";
	public static final String TABLE_SQL_DROP = "drop table Language_LanguageKeyJournalArticle";
	public static final String ORDER_BY_JPQL = " ORDER BY languageKeyJournalArticle.id.key ASC, languageKeyJournalArticle.id.articleId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY Language_LanguageKeyJournalArticle.key_ ASC, Language_LanguageKeyJournalArticle.articleId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.de.unipotsdam.elis.language.model.LanguageKeyJournalArticle"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.de.unipotsdam.elis.language.model.LanguageKeyJournalArticle"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.de.unipotsdam.elis.language.model.LanguageKeyJournalArticle"),
			true);
	public static long ARTICLEID_COLUMN_BITMASK = 1L;
	public static long KEY_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.de.unipotsdam.elis.language.model.LanguageKeyJournalArticle"));

	public LanguageKeyJournalArticleModelImpl() {
	}

	@Override
	public LanguageKeyJournalArticlePK getPrimaryKey() {
		return new LanguageKeyJournalArticlePK(_key, _articleId);
	}

	@Override
	public void setPrimaryKey(LanguageKeyJournalArticlePK primaryKey) {
		setKey(primaryKey.key);
		setArticleId(primaryKey.articleId);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new LanguageKeyJournalArticlePK(_key, _articleId);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((LanguageKeyJournalArticlePK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return LanguageKeyJournalArticle.class;
	}

	@Override
	public String getModelClassName() {
		return LanguageKeyJournalArticle.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("key", getKey());
		attributes.put("articleId", getArticleId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String key = (String)attributes.get("key");

		if (key != null) {
			setKey(key);
		}

		String articleId = (String)attributes.get("articleId");

		if (articleId != null) {
			setArticleId(articleId);
		}
	}

	@Override
	public String getKey() {
		if (_key == null) {
			return StringPool.BLANK;
		}
		else {
			return _key;
		}
	}

	@Override
	public void setKey(String key) {
		_columnBitmask |= KEY_COLUMN_BITMASK;

		if (_originalKey == null) {
			_originalKey = _key;
		}

		_key = key;
	}

	public String getOriginalKey() {
		return GetterUtil.getString(_originalKey);
	}

	@Override
	public String getArticleId() {
		if (_articleId == null) {
			return StringPool.BLANK;
		}
		else {
			return _articleId;
		}
	}

	@Override
	public void setArticleId(String articleId) {
		_columnBitmask |= ARTICLEID_COLUMN_BITMASK;

		if (_originalArticleId == null) {
			_originalArticleId = _articleId;
		}

		_articleId = articleId;
	}

	public String getOriginalArticleId() {
		return GetterUtil.getString(_originalArticleId);
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public LanguageKeyJournalArticle toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (LanguageKeyJournalArticle)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		LanguageKeyJournalArticleImpl languageKeyJournalArticleImpl = new LanguageKeyJournalArticleImpl();

		languageKeyJournalArticleImpl.setKey(getKey());
		languageKeyJournalArticleImpl.setArticleId(getArticleId());

		languageKeyJournalArticleImpl.resetOriginalValues();

		return languageKeyJournalArticleImpl;
	}

	@Override
	public int compareTo(LanguageKeyJournalArticle languageKeyJournalArticle) {
		LanguageKeyJournalArticlePK primaryKey = languageKeyJournalArticle.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof LanguageKeyJournalArticle)) {
			return false;
		}

		LanguageKeyJournalArticle languageKeyJournalArticle = (LanguageKeyJournalArticle)obj;

		LanguageKeyJournalArticlePK primaryKey = languageKeyJournalArticle.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
		LanguageKeyJournalArticleModelImpl languageKeyJournalArticleModelImpl = this;

		languageKeyJournalArticleModelImpl._originalKey = languageKeyJournalArticleModelImpl._key;

		languageKeyJournalArticleModelImpl._originalArticleId = languageKeyJournalArticleModelImpl._articleId;

		languageKeyJournalArticleModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<LanguageKeyJournalArticle> toCacheModel() {
		LanguageKeyJournalArticleCacheModel languageKeyJournalArticleCacheModel = new LanguageKeyJournalArticleCacheModel();

		languageKeyJournalArticleCacheModel.key = getKey();

		String key = languageKeyJournalArticleCacheModel.key;

		if ((key != null) && (key.length() == 0)) {
			languageKeyJournalArticleCacheModel.key = null;
		}

		languageKeyJournalArticleCacheModel.articleId = getArticleId();

		String articleId = languageKeyJournalArticleCacheModel.articleId;

		if ((articleId != null) && (articleId.length() == 0)) {
			languageKeyJournalArticleCacheModel.articleId = null;
		}

		return languageKeyJournalArticleCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(5);

		sb.append("{key=");
		sb.append(getKey());
		sb.append(", articleId=");
		sb.append(getArticleId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(10);

		sb.append("<model><model-name>");
		sb.append("de.unipotsdam.elis.language.model.LanguageKeyJournalArticle");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>key</column-name><column-value><![CDATA[");
		sb.append(getKey());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>articleId</column-name><column-value><![CDATA[");
		sb.append(getArticleId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = LanguageKeyJournalArticle.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			LanguageKeyJournalArticle.class
		};
	private String _key;
	private String _originalKey;
	private String _articleId;
	private String _originalArticleId;
	private long _columnBitmask;
	private LanguageKeyJournalArticle _escapedModel;
}